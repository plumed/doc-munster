/**
\page driver driver
<table  align=center frame=void width=95%% celpadding=5%%>
<tr> <td width=70%%> </td> <td>
<b> This is part of the cltools \link mymodules module \endlink</b>
</td> </tr> </table>
driver is a tool that allows one to to use plumed to post-process an existing trajectory.

The input to driver is specified using the command line arguments described below.

In addition, you can use the special \subpage READ command inside your plumed input
to read in colvar files that were generated during your MD simulation.  The values
read in can then be treated like calculated colvars. 

\par The input trajectory is specified using one of the following

 <table align=center frame=void width=95%% cellpadding=5%%> 
<tr>
<td width=15%> <b> \c \-\-ixyz </b></td>
<td> the trajectory in xyz format </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-igro </b></td>
<td> the trajectory in gro format </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-mf_dcd </b></td>
<td>  molfile: the trajectory in dcd format  </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-mf_gro </b></td>
<td>  molfile: the trajectory in gro format  </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-mf_g96 </b></td>
<td>  molfile: the trajectory in g96 format  </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-mf_trr </b></td>
<td>  molfile: the trajectory in trr format  </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-mf_trj </b></td>
<td>  molfile: the trajectory in trj format  </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-mf_xtc </b></td>
<td>  molfile: the trajectory in xtc format  </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-mf_pdb </b></td>
<td>  molfile: the trajectory in pdb format  </td>
</tr>
</table>

\par The following must be present

 <table align=center frame=void width=95%% cellpadding=5%%> 
<tr>
<td width=15%> <b> \c \-\-plumed </b></td>
<td> ( default=plumed.dat ) specify the name of the plumed input file </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-timestep </b></td>
<td> ( default=1.0 ) the timestep that was used in the calculation that produced this trajectory in picoseconds </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-trajectory-stride </b></td>
<td> ( default=1 ) the frequency with which frames were output to this trajectory during the simulation </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-multi </b></td>
<td> ( default=0 ) set number of replicas for multi environment (needs mpi) </td>
</tr>
</table>

\par The following options are available

 <table align=center frame=void width=95%% cellpadding=5%%> 
<tr>
<td width=15%> <b> \c \-\-help/-h </b></td>
<td> ( default=off ) print this help </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-help-debug </b></td>
<td> ( default=off ) print special options that can be used to create regtests </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-noatoms </b></td>
<td> ( default=off ) don't read in a trajectory.  Just use colvar files as specified in plumed.dat </td>
</tr>

</table>

 <table align=center frame=void width=95%% cellpadding=5%%> 
<tr>
<td width=15%> <b> \c \-\-length-units </b></td>
<td> units for length, either as a string or a number </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-dump-forces </b></td>
<td> dump the forces on a file </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-dump-forces-fmt </b></td>
<td> ( default=%%f ) the format to use to dump the forces </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-pdb </b></td>
<td> provides a pdb with masses and charges </td>
</tr>
<tr>
<td width=15%> <b> \c \-\-box </b></td>
<td> comma-separated box dimensions (3 for orthorombic, 9 for generic) </td>
</tr>

</table>

\par Examples

The following command tells plumed to postprocess the trajectory contained in trajectory.xyz
 by performing the actions described in the input file plumed.dat.  If an action that takes the
stride keyword is given a stride equal to \f$n\f$ then it will be performed only on every \f$n\f$th
frame in the trajectory file.
\verbatim
plumed driver --plumed plumed.dat --ixyz trajectory.xyz
\endverbatim

The following command tells plumed to postprocess the trajectory contained in trajectory.xyz.
 by performing the actions described in the input file plumed.dat. Here though
--trajectory-stride is set equal to the frequency with which frames were output during the trajectory
and the --timestep is equal to the simulation timestep.  As such the STRIDE parameters in the plumed.dat
files are no longer ignored and any files output resemble those that would have been generated
had we run the calculation we are running with driver when the MD simulation was running.
\verbatim
plumed driver --plumed plumed.dat --ixyz trajectory.xyz --trajectory-stride 100 --timestep 0.001
\endverbatim

By default you have access to a subset of the trajectory file formats
supported by VMD, e.g. xtc and dcd:

\verbatim
plumed driver --plumed plumed.dat --pdb diala.pdb --mf_xtc traj.xtc --trajectory-stride 100 --timestep 0.001
\endverbatim

where --mf_ prefixes the extension of one of the accepted molfile
plugin format.

To have support of all of VMD's plugins you need to recompile
PLUMED. You need to download the SOURCE of VMD, which contains
a plugins directory. Adapt build.sh and compile it. At
the end, you should get the molfile plugins compiled as a static
library libmolfile_plugin.a. Locate said file and libmolfile_plugin.h, 
and customize the configure command with something along
the lines of:

\verbatim
configure [...] LDFLAGS="-ltcl8.5 -L/mypathtomolfilelibrary/ -L/mypathtotcl" CPPFLAGS="-I/mypathtolibmolfile_plugin.h/"
\endverbatim

and rebuild. Check the available molfile plugins and limitations at http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/.

*/
